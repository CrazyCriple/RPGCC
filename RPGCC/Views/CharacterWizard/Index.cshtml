@model RPGCC.ViewModels.CharacterWizardViewModel

@{
    ViewBag.Title = "Charakter wizard";
}

<h2>Charakter erstellen</h2>

<style>
    ul {
        list-style: none;
    }

        ul.li {
            clear: both;
        }
</style>

@using (Html.BeginForm("Next", HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString(), FormMethod.Post, new { id = "SampleWizardForm" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)    
    
    <div id="SampleWizardWrapper">
        <div class="wizard-errors-summary"></div>

        <div class="form-horizontal">
            <h3>Step <span data-bind="text: Model.StepIndex()">1</span> of <span data-bind="text: Model.NumberOfSteps"></span>: <span data-bind="text: Model.CurrentStepName"></span></h3>

            <ul>
                <li data-bind="visible: Model.StepIndex() == 1">
                    <h3>@Html.LabelFor(model => model.Step1)</h3>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Step1.Name, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step1.Name, new { data_bind = "value: Model.Step1.Name" })
                            @Html.ValidationMessageFor(model => model.Step1.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Step1.Gender, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step1.Gender, new { data_bind = "value: Model.Step1.Gender" })
                            @Html.ValidationMessageFor(model => model.Step1.Gender)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Step1.Age, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step1.Age, new { data_bind = "value: Model.Step1.Age" })
                            @Html.ValidationMessageFor(model => model.Step1.Age)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Step1.Concept, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step1.Concept, new { data_bind = "value: Model.Step1.Concept" })
                            @Html.ValidationMessageFor(model => model.Step1.Concept)
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Step1.Description, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step1.Description, new { data_bind = "value: Model.Step1.Description" })
                            @Html.ValidationMessageFor(model => model.Step1.Description)
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input data-bind="event: { click: Next.bind($data, $element) }" type="submit" value="Next" class="btn btn-default" />
                        </div>
                    </div>
                </li>

                <li style="display: none;" data-bind="visible: Model.StepIndex() == 2">
                    <h3>@Html.LabelFor(model => model.Step2)</h3>

                    <div class="form-group">
                        @Html.Label("Verteile die Zahlen 5, 3 und 1 auf diese Assets", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Label("Schärfe (Inteligänz, Training, Fokus) ", new { @class = "control-label col-md-2" })
                            @Html.TextBoxFor(model => model.Step2.Assets.Acuity, new { data_bind = "value: Model.Step2.Assets.Acuity" })
                            @Html.ValidationMessageFor(model => model.Step2.Assets.Acuity)
                        </div>
                        <div class="col-md-10">
                            @Html.Label("Kraft (Muskel, Personalität, Willenskraft) ", new { @class = "control-label col-md-2" })
                            @Html.TextBoxFor(model => model.Step2.Assets.Force, new { data_bind = "value: Model.Step2.Assets.Force" })
                            @Html.ValidationMessageFor(model => model.Step2.Assets.Force)
                        </div>

                        <div class="col-md-10">
                            @Html.Label("Raffinesse (Agilität, Geschwindigkeit, Elan) ", new { @class = "control-label col-md-2" })
                            @Html.TextBoxFor(model => model.Step2.Assets.Grace, new { data_bind = "value: Model.Step2.Assets.Grace" })
                            @Html.ValidationMessageFor(model => model.Step2.Assets.Grace)
                        </div>

                        </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input data-bind="event: { click: Previous }" type="submit" value="Previous" class="btn btn-default" />
                            <input data-bind="event: { click: Next.bind($data, $element) }" type="submit" value="Next" class="btn btn-default" />
                        </div>
                    </div>
                </li>

                <li style="display: none;" data-bind="visible: Model.StepIndex() == 3">
                    <h3>@Html.LabelFor(model => model.Step3)</h3>
                    
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Step3.Trait1, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step3.Trait1, new { data_bind = "value: Model.Step3.Trait1" })
                            @Html.ValidationMessageFor(model => model.Step3.Trait1)
                            
                            
                        </div>
                        @Html.DisplayFor(model => model.Step3.SagaSkill1.Name, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step3.SagaSkill1, new { data_bind = "value: Model.Step3.SagaSkill1" })
                            @Html.ValidationMessageFor(model => model.Step3.SagaSkill1)


                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Step3.SagaSkills, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Step3.SagaSkills, new { data_bind = "value: Model.Step3.SagaSkills" })
                            @Html.ValidationMessageFor(model => model.Step3.SagaSkills)
                        </div>
                    </div>*@

                    

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input data-bind="event: { click: Previous }" type="submit" value="Previous" class="btn btn-default" />
                            <input data-bind="event: { click: Next.bind($data, $element) }" type="submit" value="Next" class="btn btn-default" />
                        </div>
                    </div>
                </li>

            </ul>

            <div style="clear: both; float: left; width: 100%; margin-top: 20px;">
                <a href="@Url.Action("Index", "CharacterWizard")" style="display: none;" data-bind="visible: Model.StepIndex() != 1">[Start from the beginning]</a>
            </div>
        </div>
    </div>
}

@section Scripts {    
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/knockout-3.0.0.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/wizard.js"></script>

    <script type="text/javascript">
        $(function () {
            $("#SampleWizardWrapper").Wizard({
                formId: "SampleWizardForm",
                model: @(Html.Raw(Json.Encode(Model))),
                url: "/@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()/",
                mapping: {
                    create: function (options)
                    {
                        var m = ko.mapping.fromJS(options.data);

                        return m;
                    }
                }
            });
        });
    </script>
}